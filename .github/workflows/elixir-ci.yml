name: elixir-ci

on:
  push:
    branches:
      - "main"
    paths:
      - "elixir-ci/**"
  workflow_dispatch:
  pull_request:
    types: [assigned, opened, synchronize, reopened]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build and push Alpine image otp 26 elixir 1.15
        uses: ./.github/actions/push-image
        with:
          image_name: ghcr.io/multiverse-io/elixir-ci
          image_tag: 1.15.7-erlang-26.1.2-alpine-3.18.4
          context: ./elixir-ci/alpine
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          lacework_access_token: ${{ secrets.LW_ACCESS_TOKEN }}
          build_args: |
            ELIXIR_VERSION=1.15.7
            ERLANG_VERSION=26.1.2
            ALPINE_VERSION=3.18.4

      - name: Build and push Alpine image otp 26
        uses: ./.github/actions/push-image
        with:
          image_name: ghcr.io/multiverse-io/elixir-ci
          image_tag: 1.14.5-erlang-26.1.2-alpine-3.18.4
          context: ./elixir-ci/alpine
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          lacework_access_token: ${{ secrets.LW_ACCESS_TOKEN }}
          build_args: |
            ELIXIR_VERSION=1.14.5
            ERLANG_VERSION=26.1.2
            ALPINE_VERSION=3.18.4

      - name: Build and push Debian image
        uses: ./.github/actions/push-image
        with:
          image_name: ghcr.io/multiverse-io/elixir-ci
          image_tag: 1.16.0-erlang-26.2.1-debian-bookworm-20231009-slim
          context: ./elixir-ci/debian
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          lacework_access_token: ${{ secrets.LW_ACCESS_TOKEN }}
