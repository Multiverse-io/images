name: "Push image"
description: "Build, scan and push image to GitHub Container Registry"

inputs:
  image_name:
    description: "Docker image name"
    required: true
  image_tag:
    description: "Docker image tag"
    required: true
  context:
    description: "Path to directory containing Dockerfile"
    required: true
  registry_password:
    description: "GITHUB_TOKEN"
    required: true
  fail_on_security_vulnerabilities:
    description: "If false allow security vulnerabilities in built image"
    default: true
    required: false
  lacework_access_token:
    description: "LW_ACCESS_TOKEN"
    required: true
  build_args:
    description: "Docker build args"
    default: ""
    required: false

runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ inputs.registry_password }}

    - name: Build and export to Docker
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        platforms: linux/amd64
        load: true
        tags: ${{ inputs.image_name }}:${{ inputs.image_tag }}
        build-args: ${{ inputs.build_args }}

    - name: Run Lacework vulnerability scanner
      shell: bash
      run: |
        curl -L https://github.com/lacework/lacework-vulnerability-scanner/releases/latest/download/lw-scanner-linux-amd64 -o lw-scanner
        chmod +x lw-scanner
        ./lw-scanner image evaluate ${{ inputs.image_name }} ${{ inputs.image_tag }} --build-id ${{ github.run_id }} -v=false --fixable --disable-library-package-scanning > report.json

        sed -i '/INFO/d' report.json

        cat report.json
      env:
        LW_ACCESS_TOKEN: ${{ inputs.lacework_access_token }}
        LW_ACCOUNT_NAME: multiverse
        LW_ACCOUNT_SUFFIX: fra.lacework.net
        LW_SCANNER_DISABLE_UPDATES: true

    - uses: actions/upload-artifact@v3
      with:
        name: report.json
        path: report.json

    - name: Fail if vulnerabilities found
      if: inputs.fail_on_security_vulnerabilities == 'true'
      shell: bash
      run: |
        cat report.json | jq -e '.cve.critical_vulnerabilities == 0' > /dev/null || (echo "critical vulnerabilities found" && false)
        cat report.json | jq -e '.cve.high_vulnerabilities == 0' > /dev/null || (echo "high vulnerabilities found" && false)
        cat report.json | jq -e '.cve.medium_vulnerabilities == 0' > /dev/null || (echo "medium vulnerabilities found" && false)
        cat report.json | jq -e '.cve.low_vulnerabilities == 0' > /dev/null || (echo "low vulnerabilities found" && false)
        cat report.json | jq -e '.cve.info_vulnerabilities == 0' > /dev/null || (echo "info vulnerabilities found" && false)

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        platforms: linux/amd64
        push: ${{ github.ref == 'refs/heads/main' }}
        tags: ${{ inputs.image_name }}:${{ inputs.image_tag }}
        build-args: ${{ inputs.build_args }}
